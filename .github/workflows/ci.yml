name: CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '30 12 * * 0'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  ruff:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Linting (ruff)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    -
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Main Script
      run: |
        make pip-install
        make ruff

  mypy:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Annotations (mypy)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    -
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Main Script
      run: |
        make pip-install
        make mypy

  pytest:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Tests (pytest-${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
      fail-fast: false
    steps:
    - uses: actions/checkout@v4
    -
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Main Script
      run: |
        make pip-install
        make test

  examples:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Examples
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    -
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Main Script
      run: |
        make pip-install
        make examples

  deploy:
    needs: [ruff, mypy, pytest, examples]
    name: PyPI deploy
    environment: pypi
    permissions:
      contents: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - id: dist
      uses: casperdcl/deploy-pypi@v2
      with:
        build: true
        upload: false
    - if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

# vim: set ts=2 sw=2 et:
